
<ref *2> IncomingMessage {
  _readableState: ReadableState {   
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: [],
    flowing: null,
    ended: true,
    endEmitted: false,
    reading: false,
    constructed: true,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,       
    resumeScheduled: false,
    errorEmitted: false,
    emitClose: true,
    autoDestroy: true,
    destroyed: false,
    errored: null,
    closed: false,
    closeEmitted: false,
    defaultEncoding: 'utf8',        
    awaitDrainWriters: null,        
    multiAwaitDrain: false,
    readingMore: true,
    dataEmitted: false,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: ReadableState { 
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      constructed: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,       
      readableListening: false,     
      resumeScheduled: false,       
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',      
      awaitDrainWriters: null,      
      multiAwaitDrain: false,       
      readingMore: false,
      dataEmitted: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false      
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,       
    _writableState: WritableState { 
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',      
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,      
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,     
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []     
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,     
      insecureHTTPParser: undefined,
      requestTimeout: 300000,       
      headersTimeout: 60000,        
      keepAliveTimeout: 5000,       
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,     
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,        
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,     
      httpAllowHalfOpen: false,     
      timeout: 0,
      maxHeadersCount: null,        
      maxRequestsPerSocket: 0,      
      _connectionKey: '6::::3000',  
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,    
      [Symbol(async_id_symbol)]: 14,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {      
        _idleTimeout: 30000,        
        _idlePrev: [TimersList],    
        _idleNext: [TimersList],    
        _idleStart: 1426,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,      
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,     
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 13,      
        [Symbol(triggerId)]: 1      
      },
      [Symbol(kUniqueHeaders)]: null
    },
    _server: Server {
      maxHeaderSize: undefined,     
      insecureHTTPParser: undefined,
      requestTimeout: 300000,       
      headersTimeout: 60000,        
      keepAliveTimeout: 5000,       
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,     
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,        
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,     
      httpAllowHalfOpen: false,     
      timeout: 0,
      maxHeadersCount: null,        
      maxRequestsPerSocket: 0,      
      _connectionKey: '6::::3000',  
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,    
      [Symbol(async_id_symbol)]: 14,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {      
        _idleTimeout: 30000,        
        _idlePrev: [TimersList],    
        _idleNext: [TimersList],    
        _idleStart: 1426,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,      
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,     
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 13,      
        [Symbol(triggerId)]: 1      
      },
      [Symbol(kUniqueHeaders)]: null
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],        
      incoming: [Circular *2],      
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: ServerResponse {  
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,     
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,       
      shouldKeepAlive: true,        
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,      
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,    
      _removedContLen: false,       
      _removedTE: false,
      strictContentLength: false,   
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Circular *1],        
      _header: null,
      _keepAliveTimeout: 5000,      
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *2],
      _sent100: false,
      _expect_continue: false,      
      _maxRequestsPerSocket: 0,     
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,    
      [Symbol(kBytesWritten)]: 0,   
      [Symbol(kNeedDrain)]: false,  
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,      
      [Symbol(kUniqueHeaders)]: null
    },
    [Symbol(async_id_symbol)]: 793, 
    [Symbol(kHandle)]: TCP {        
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,        
    [Symbol(kBuffer)]: null,        
    [Symbol(kBufferCb)]: null,      
    [Symbol(kBufferGen)]: null,     
    [Symbol(kCapture)]: false,      
    [Symbol(kSetNoDelay)]: true,    
    [Symbol(kSetKeepAlive)]: false, 
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,        
    [Symbol(kBytesWritten)]: 0      
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  rawHeaders: [
    'Host',
    'localhost:3000',
    'Connection',
    'keep-alive',
    'Cache-Control',
    'max-age=0',
    'sec-ch-ua',
    '"Google Chrome";v="117", "Not;A=Brand";v="8", "Chromium";v="117"', 
    'sec-ch-ua-mobile',
    '?0',
    'sec-ch-ua-platform',
    '"Windows"',
    'Upgrade-Insecure-Requests',    
    '1',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36',
    'Accept',
    'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',  
    'Sec-Fetch-Site',
    'same-origin',
    'Sec-Fetch-Mode',
    'navigate',
    'Sec-Fetch-User',
    '?1',
    'Sec-Fetch-Dest',
    'document',
    'Accept-Encoding',
    'gzip, deflate, br',
    'Accept-Language',
    'en-US,en;q=0.9,hi;q=0.8',      
    'Cookie',
    'jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MjUzMTFlZTA0N2U0ZjY3NGY3MzIyMyIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNjk3MzU1NzAxLCJleHAiOjE2OTczNTkzMDF9.3tOL_kyVLOjVAC5Gc7nYrsoupELWhg5STkE8jAZR_VM; __stripe_mid=929c16bd-b6a9-4741-aae8-0dfeccca01f9f6a1f0; __stripe_sid=62f6bbe1-5e04-4992-b5ab-c6cea048558f182d4f; connect.sid=s%3AMAnJB2tIfFCrt4Vgy0UC3O-hS879gUx7.b3la73vBm4rX54gwkKCXEe7K3moi7ArIQlNMv%2FsO0Ns',
    'If-None-Match',
    'W/"2b4-18b3226d1ba"',
    'If-Modified-Since',
    'Sun, 15 Oct 2023 07:04:46 GMT' 
  ],
  rawTrailers: [],
  joinDuplicateHeaders: undefined,  
  aborted: false,
  upgrade: false,
  url: '/usersOrders',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _readableState: ReadableState { 
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      constructed: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,       
      readableListening: false,     
      resumeScheduled: false,       
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',      
      awaitDrainWriters: null,      
      multiAwaitDrain: false,       
      readingMore: false,
      dataEmitted: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false      
    },
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,       
    _writableState: WritableState { 
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',      
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,      
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,     
      buffered: [],
      bufferedIndex: 0,
      allBuffers: true,
      allNoop: true,
      pendingcb: 0,
      constructed: true,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: true,
      errored: null,
      closed: false,
      closeEmitted: false,
      [Symbol(kOnFinished)]: []     
    },
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,     
      insecureHTTPParser: undefined,
      requestTimeout: 300000,       
      headersTimeout: 60000,        
      keepAliveTimeout: 5000,       
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,     
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,        
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,     
      httpAllowHalfOpen: false,     
      timeout: 0,
      maxHeadersCount: null,        
      maxRequestsPerSocket: 0,      
      _connectionKey: '6::::3000',  
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,    
      [Symbol(async_id_symbol)]: 14,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {      
        _idleTimeout: 30000,        
        _idlePrev: [TimersList],    
        _idleNext: [TimersList],    
        _idleStart: 1426,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,      
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,     
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 13,      
        [Symbol(triggerId)]: 1      
      },
      [Symbol(kUniqueHeaders)]: null
    },
    _server: Server {
      maxHeaderSize: undefined,     
      insecureHTTPParser: undefined,
      requestTimeout: 300000,       
      headersTimeout: 60000,        
      keepAliveTimeout: 5000,       
      connectionsCheckingInterval: 30000,
      joinDuplicateHeaders: undefined,
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,     
      _connections: 2,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,        
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,     
      httpAllowHalfOpen: false,     
      timeout: 0,
      maxHeadersCount: null,        
      maxRequestsPerSocket: 0,      
      _connectionKey: '6::::3000',  
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,    
      [Symbol(async_id_symbol)]: 14,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {      
        _idleTimeout: 30000,        
        _idlePrev: [TimersList],    
        _idleNext: [TimersList],    
        _idleStart: 1426,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,      
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,     
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 13,      
        [Symbol(triggerId)]: 1      
      },
      [Symbol(kUniqueHeaders)]: null
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],        
      incoming: [Circular *2],      
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: ServerResponse {  
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,     
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,       
      shouldKeepAlive: true,        
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,      
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,    
      _removedContLen: false,       
      _removedTE: false,
      strictContentLength: false,   
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      socket: [Circular *1],        
      _header: null,
      _keepAliveTimeout: 5000,      
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *2],
      _sent100: false,
      _expect_continue: false,      
      _maxRequestsPerSocket: 0,     
      locals: [Object: null prototype] {},
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,   
      [Symbol(kNeedDrain)]: false,  
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,      
      [Symbol(kUniqueHeaders)]: null
    },
    [Symbol(async_id_symbol)]: 793, 
    [Symbol(kHandle)]: TCP {        
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,        
    [Symbol(kBuffer)]: null,        
    [Symbol(kBufferCb)]: null,      
    [Symbol(kBufferGen)]: null,     
    [Symbol(kCapture)]: false,      
    [Symbol(kSetNoDelay)]: true,    
    [Symbol(kSetKeepAlive)]: false, 
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,        
    [Symbol(kBytesWritten)]: 0      
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/usersOrders',      
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/usersOrders',       
    path: '/usersOrders',
    href: '/usersOrders',
    _raw: '/usersOrders'
  },
  params: {},
  query: {},
  res: <ref *3> ServerResponse {    
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,       
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,        
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,      
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,     
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: <ref *1> Socket {       
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,     
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *3],  
      [Symbol(async_id_symbol)]: 793,
      [Symbol(kHandle)]: [TCP],     
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,      
      [Symbol(kBuffer)]: null,      
      [Symbol(kBufferCb)]: null,    
      [Symbol(kBufferGen)]: null,   
      [Symbol(kCapture)]: false,    
      [Symbol(kSetNoDelay)]: true,  
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,      
      [Symbol(kBytesWritten)]: 0    
    },
    _header: null,
    _keepAliveTimeout: 5000,        
    _onPendingData: [Function: bound updateOutgoingData],
    req: [Circular *2],
    _sent100: false,
    _expect_continue: false,        
    _maxRequestsPerSocket: 0,       
    locals: [Object: null prototype] {},
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,      
    [Symbol(kBytesWritten)]: 0,     
    [Symbol(kNeedDrain)]: false,    
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],      
      'access-control-allow-origin':
 [Array],
      'access-control-expose-headers': [Array]
    },
    [Symbol(errored)]: null,        
    [Symbol(kUniqueHeaders)]: null  
  },
  body: {},
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/usersOrders',       
    path: '/usersOrders',
    href: '/usersOrders',
    _raw: '/usersOrders'
  },
  secret: undefined,
  cookies: {
    jwt: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MjUzMTFlZTA0N2U0ZjY3NGY3MzIyMyIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNjk3MzU1NzAxLCJleHAiOjE2OTczNTkzMDF9.3tOL_kyVLOjVAC5Gc7nYrsoupELWhg5STkE8jAZR_VM',
    __stripe_mid: '929c16bd-b6a9-4741-aae8-0dfeccca01f9f6a1f0',
    __stripe_sid: '62f6bbe1-5e04-4992-b5ab-c6cea048558f182d4f',
    'connect.sid': 's:MAnJB2tIfFCrt4Vgy0UC3O-hS879gUx7.b3la73vBm4rX54gwkKCXEe7K3moi7ArIQlNMv/sO0Ns'
  },
  signedCookies: [Object: null prototype] {},
  sessionStore: MemoryStore {       
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2,
    _maxListeners: undefined,       
    sessions: [Object: null prototype] {
      cPZ0kDnaXUTNHqQvKDQPTJ5IIqTLhUBW: '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"id":"6525311ee047e4f674f73223","role":"user"}}}',
      yov_UKQnHXAKxqV1hd2ddGI3M5_vW5xj: '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"id":"6525311ee047e4f674f73223","role":"user"}}}'
    },
    generate: [Function (anonymous)],
    [Symbol(kCapture)]: false       
  },
  sessionID: 'hBmm9i7b_brmac8e7uGfn28ox9h-R1nG',
  session: Session {
    cookie: { path: '/', _expires: null, originalMaxAge: null, httpOnly:
 true }
  },
  logIn: [Function (anonymous)],    
  login: [Function (anonymous)],    
  logOut: [Function (anonymous)],   
  logout: [Function (anonymous)],   
  isAuthenticated: [Function (anonymous)],
  isUnauthenticated: [Function (anonymous)],
  _sessionManager: SessionManager { 
    _key: 'passport',
    _serializeUser: [Function: bound ]
  },
  _passport: {
    instance: Authenticator {       
      _key: 'passport',
      _strategies: [Object],        
      _serializers: [Array],
      _deserializers: [Array],      
      _infoTransformers: [],        
      _framework: [Object],
      _sm: [SessionManager],        
    'sec-ch-ua-platform': '"Windows"',
    'upgrade-insecure-requests': '1',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36',
    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
    'sec-fetch-site': 'same-origin',    'sec-fetch-mode': 'navigate',
    'sec-fetch-user': '?1',
    'sec-fetch-dest': 'document',
    'accept-encoding': 'gzip, deflate, br',
    'accept-language': 'en-US,en;q=0.9,hi;q=0.8',
    cookie: 'jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1MjUzMTFlZTA0N2U0ZjY3NGY3MzIyMyIsInJvbGUiOiJ1c2VyIiwiaWF0IjoxNjk3MzU1NzAxLCJleHAiOjE2OTczNTkzMDF9.3tOL_kyVLOjVAC5Gc7nYrsoupELWhg5STkE8jAZR_VM; __stripe_mid=929c16bd-b6a9-4741-aae8-0dfeccca01f9f6a1f0; __stripe_sid=62f6bbe1-5e04-4992-b5ab-c6cea048558f182d4f; connect.sid=s%3AMAnJB2tIfFCrt4Vgy0UC3O-hS879gUx7.b3la73vBm4rX54gwkKCXEe7K3moi7ArIQlNMv%2FsO0Ns',
    'if-none-match': 'W/"2b4-18b3226d1ba"',
    'if-modified-since': 'Sun, 15 Oct 2023 07:04:46 GMT'
  },
  [Symbol(kHeadersCount)]: 36,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
}




















